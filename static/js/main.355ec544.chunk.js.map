{"version":3,"sources":["components/Header.js","components/Edit.js","components/Todox.js","components/Todo.js","components/List.js","components/AddTodo.js","App.js","index.js"],"names":["headerStyle","fontSize","textDecoration","Header","props","style","title","Edit","todoVal","setTodoVal","onUpdate","id","updateTodo","setUpdateTodo","onSubmit","e","preventDefault","item","type","value","onChange","target","Todox","todo","checkBox","className","onDoubleClick","Todo","deleteTodo","useState","setCheckBox","defaultChecked","onClick","List","todos","map","AddTodo","onAdd","setItem","placeholder","App","setTodos","Math","ceil","random","newTodo","filter","console","log","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.355ec544.chunk.js","sourcesContent":["// Creating a Function Header component with props object passed in\r\nconst Header = (props) => {\r\n  // returns a div with a h1 element\r\n  return (\r\n    <div>\r\n      {/* h1 has CSS styling with headerStyle object passed in while the text inside the h1 comes from the props object with title key */}\r\n      <h1 style={headerStyle}>{props.title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Created an object that is used to style the h1 component above\r\nconst headerStyle = {\r\n  fontSize: \"40px\",\r\n  textDecoration: \"underline\",\r\n};\r\n\r\n// Exported the Header to be used in a different file\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst Edit = ({todoVal, setTodoVal, onUpdate, id, updateTodo, setUpdateTodo }) => {\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        onUpdate({id, item:todoVal})\r\n        setUpdateTodo(!updateTodo)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" value={todoVal} onChange={ (e) => setTodoVal(e.target.value)} />\r\n            <input type=\"submit\" value=\"Update\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","const Todox = ({todo, checkBox, setUpdateTodo, updateTodo, setTodoVal }) => {\r\n    return (\r\n        <span className={checkBox ? 'crossed' : ''} onDoubleClick={() => {\r\n            setTodoVal(todo.item)\r\n            setUpdateTodo(!updateTodo)\r\n            }}>\r\n        {todo.item}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Todox\r\n","// importing useState to use as a react hook in-order-to use states in functional components\r\nimport { useState } from 'react'\r\n// importing trash-can icon form react-icons\r\nimport { FaTrashAlt } from 'react-icons/fa'\r\n// Creating an individual Todo functional component and passing in the todo array & deleteTodo method from the App.js as props\r\nimport Edit from './Edit'\r\nimport Todox from './Todox'\r\nconst Todo = ({ todo, deleteTodo, onUpdate }) => {\r\n    // Keeping track of the checkbox input to mark the todo as complete\r\n    const [ checkBox, setCheckBox] = useState(false)\r\n    const [ updateTodo, setUpdateTodo ] = useState(true)\r\n    const [ todoVal, setTodoVal] = useState(todo.value)\r\n    // returning an li element with three elements\r\n    return (\r\n        <li className={!updateTodo ? 'flexList' : ''}>\r\n            {/* A checkbox input with default false and and on checking it turns it to true */}\r\n            <input type=\"checkbox\" defaultChecked={checkBox} onChange={() => setCheckBox(!checkBox)} />\r\n            {/* A span that adds todo.item as the value */}\r\n            {updateTodo ? <Todox todo={todo} checkBox={checkBox} setUpdateTodo={setUpdateTodo} updateTodo={updateTodo} setTodoVal={setTodoVal} /> : <Edit todoVal={todoVal} setTodoVal={setTodoVal} onUpdate={onUpdate} id={todo.id} updateTodo={updateTodo} setUpdateTodo={setUpdateTodo}/>}\r\n            {updateTodo && <span onClick={() => deleteTodo(todo.id)}><FaTrashAlt /></span>}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n","// importing todo component\r\nimport Todo from './Todo'\r\n// Creating a functional List component with todos array property passed in from props object\r\nconst List = ({ todos, deleteTodo, onUpdate }) => {\r\n  // renders a div with Todo components based on number of items inside the todos array\r\n  return (\r\n        <ul className='liststyle'>\r\n          {todos.map((todo) => \r\n            <Todo key={todo.id} todo={todo} deleteTodo={deleteTodo} onUpdate={onUpdate} />\r\n          )}  \r\n        </ul>\r\n    )\r\n}\r\n// Exporting Todo component\r\nexport default List\r\n\r\n","// Importing useState hook to keep track and update the state of the Todo Component\r\nimport { useState } from 'react'\r\n\r\n// Creating AddTodo function component with onAdd method from props object passed in as a parameter\r\nconst AddTodo = ({ onAdd }) => {\r\n    // creating an item object to hold state and setItem to update the state with initial value of item being an empty string \r\n    const [item, setItem] = useState('')\r\n\r\n    // creating an onSubmit function that prevents the form from POSTing and calling the onAdd method on the item object and then setting the item to an empty string after submission\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        onAdd({item})\r\n\r\n        setItem('')\r\n    }\r\n    // renders a form with a label, text-input & submit button\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Add Todo:</label>\r\n            <input \r\n                className='textInput'\r\n                type=\"text\" \r\n                placeholder=\"Todo Item\"\r\n                // value of the input is same as item defined above\r\n                value={item}\r\n                // changes the item to the value typed in the input box\r\n                onChange={ (e) => setItem(e.target.value)}\r\n            /> \r\n            <input type=\"submit\" value=\"Add Todo\" />\r\n        </form>\r\n    )\r\n}\r\n// export AddTodo component ot be used elsewhere\r\nexport default AddTodo\r\n","// This is the main file that plops the components into index.html file in the public folder\r\n// useState is a hook that's required for functional components in order to keep track of component's state and update it \r\nimport { useState } from 'react'\r\n// importing the Header component\r\nimport Header from \"./components/Header\";\r\n// importing the List component\r\nimport List from \"./components/List\"\r\n// importing AddTodo component\r\nimport AddTodo from \"./components/AddTodo\"\r\n\r\n// Creating App functional component\r\nfunction App() {\r\n  // creating a sate object and an update method to change the state object and setting the initial state to an array of three todo items\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      item: \"Drink Water\",\r\n    },\r\n    {\r\n      id: 2,\r\n      item: \"Make Healthy Dinner\",\r\n    },\r\n    {\r\n      id: 3,\r\n      item: \"Exercise\",\r\n    },\r\n  ]);\r\n\r\n  // Creating an addTodo function to add a todo to the list\r\n  const addTodo = (todo) => {\r\n    const id = Math.ceil(Math.random()*100000)\r\n    const newTodo = {id, ...todo}\r\n    setTodos([...todos, newTodo])\r\n  }\r\n\r\n  // Update a todo item\r\n  const onUpdate = (todo) => {\r\n    console.log(todo)\r\n    setTodos(todos.map((x) => x.id === todo.id ? todo : x))\r\n  }\r\n\r\n  // Delete a todo item\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n\r\n  // The app component return a div with a Header, AddTodo and List components\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Header has a prop title passed in */}\r\n      <Header title=\"Todo List\" />\r\n      {/* AddTodo has a prop onAdd passed in */}\r\n      <AddTodo onAdd={addTodo} />\r\n      {/* List has a todos prop passed in */}\r\n      <List todos={todos} deleteTodo={deleteTodo} onUpdate={onUpdate} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Exported the App component to be used in a different file (index.js)\r\nexport default App;\r\n","// importing react\r\nimport React from 'react';\r\n// importing react-virtual-dom\r\nimport ReactDOM from 'react-dom';\r\n// importing styling from index.css\r\nimport './index.css';\r\n// importing app component to be rendered inside the root element of index.html in the public folder\r\nimport App from './App';\r\n\r\n// calling the render method of ReactDOM to render the App component inside the 'root' div of index.html\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}